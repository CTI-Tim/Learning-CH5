import { Ch5Log } from "../../ch5-common/ch5-log";
import { ICh5ButtonListModeAttributes } from './../interfaces/i-ch5-button-list-mode-attributes';
import { ICh5PropertySettings } from "../../ch5-core/ch5-property";
import { TCh5ButtonListButtonType, TCh5ButtonListButtonHAlignLabel, TCh5ButtonListButtonVAlignLabel, TCh5ButtonListButtonCheckboxPosition, TCh5ButtonListButtonIconPosition } from "./../interfaces/t-ch5-button-list";
import { Ch5ButtonListBase } from "./ch5-button-list-base";
export declare class Ch5ButtonListModeBase extends Ch5Log implements ICh5ButtonListModeAttributes {
    static readonly BUTTON_TYPES: TCh5ButtonListButtonType[];
    static readonly BUTTON_HALIGN_LABEL_POSITIONS: TCh5ButtonListButtonHAlignLabel[];
    static readonly BUTTON_VALIGN_LABEL_POSITIONS: TCh5ButtonListButtonVAlignLabel[];
    static readonly BUTTON_CHECKBOX_POSITIONS: TCh5ButtonListButtonCheckboxPosition[];
    static readonly BUTTON_ICON_POSITIONS: TCh5ButtonListButtonIconPosition[];
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    private _ch5Properties;
    private _parentCh5ButtonList;
    set parentComponent(value: Ch5ButtonListBase | null);
    get parentComponent(): Ch5ButtonListBase | null;
    set type(value: TCh5ButtonListButtonType);
    get type(): TCh5ButtonListButtonType;
    set hAlignLabel(value: TCh5ButtonListButtonHAlignLabel);
    get hAlignLabel(): TCh5ButtonListButtonHAlignLabel;
    set vAlignLabel(value: TCh5ButtonListButtonVAlignLabel);
    get vAlignLabel(): TCh5ButtonListButtonVAlignLabel;
    set checkboxPosition(value: TCh5ButtonListButtonCheckboxPosition);
    get checkboxPosition(): TCh5ButtonListButtonCheckboxPosition;
    set iconPosition(value: TCh5ButtonListButtonIconPosition);
    get iconPosition(): TCh5ButtonListButtonIconPosition;
    set iconClass(value: string);
    get iconClass(): string;
    set iconUrl(value: string);
    get iconUrl(): string;
    set customClass(value: string);
    get customClass(): string;
    set customStyle(value: string);
    get customStyle(): string;
    set labelInnerHTML(value: string);
    get labelInnerHTML(): string;
    constructor();
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected initAttributes(): void;
}

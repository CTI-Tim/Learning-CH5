import { Ch5Common } from "../ch5-common/ch5-common";
import { Ch5SignalElementAttributeRegistryEntries } from "../ch5-common/ch5-signal-attribute-registry";
import { TCh5SignalLevelGaugeOrientation, TCh5SignalLevelGaugeSize } from './interfaces/t-ch5-signal-level-gauge';
import { ICh5SignalLevelGaugeAttributes } from './interfaces/i-ch5-signal-level-gauge-attributes';
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
export declare class Ch5SignalLevelGauge extends Ch5Common implements ICh5SignalLevelGaugeAttributes {
    static readonly ORIENTATION: TCh5SignalLevelGaugeOrientation[];
    static readonly SIZE: TCh5SignalLevelGaugeSize[];
    static readonly COMPONENT_DATA: any;
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    static readonly ELEMENT_NAME = "ch5-signal-level-gauge";
    primaryCssClass: string;
    private _ch5Properties;
    private _elContainer;
    set orientation(value: TCh5SignalLevelGaugeOrientation);
    get orientation(): TCh5SignalLevelGaugeOrientation;
    set minValue(value: number);
    get minValue(): number;
    set maxValue(value: number);
    get maxValue(): number;
    set numberOfBars(value: number);
    get numberOfBars(): number;
    set signalBarSpacing(value: number);
    get signalBarSpacing(): number;
    set value(value: number);
    get value(): number;
    set receiveStateValue(value: string);
    get receiveStateValue(): string;
    set size(value: TCh5SignalLevelGaugeSize);
    get size(): TCh5SignalLevelGaugeSize;
    static registerSignalAttributeTypes(): void;
    static registerCustomElement(): void;
    constructor();
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected createInternalHtml(): void;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected removeEventListeners(): void;
    protected unsubscribeFromSignals(): void;
    private handleOrientation;
    private handleValue;
    private handleNumberOfBars;
    private handleSize;
    private updateCssClass;
    protected getTargetElementForCssClassesAndStyle(): HTMLElement;
    getCssClassDisabled(): string;
}

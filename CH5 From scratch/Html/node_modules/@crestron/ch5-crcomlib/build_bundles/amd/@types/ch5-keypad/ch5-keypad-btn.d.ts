import { Subscription } from "rxjs";
import { Ch5Common } from "../ch5-common/ch5-common";
import { Ch5Pressable } from "../ch5-common/ch5-pressable";
import { ICh5KeypadButtonAttributes } from "./interfaces/i-ch5-keypad-btn-attributes";
import { TCh5KeypadButtonCreateDTO } from "./interfaces/t-ch5-keypad";
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
import { Ch5Properties } from "../ch5-core/ch5-properties";
export declare class Ch5KeypadButton extends Ch5Common implements ICh5KeypadButtonAttributes {
    static readonly ELEMENT_NAME = "ch5-keypad-button";
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    readonly primaryCssClass = "keypad-btn";
    readonly pressedCssClassPostfix = "-pressed";
    protected _ch5Properties: Ch5Properties;
    private params;
    protected componentPrefix: string;
    protected emptyBtnCssClass: string;
    protected labelMajorCssClass: string;
    protected labelMinorCssClass: string;
    protected parentDivCssClass: string;
    protected _elButton: HTMLElement;
    protected _elMajorSpan: HTMLElement;
    protected _elMinorSpan: HTMLElement;
    protected _elIcon: HTMLElement;
    protected _intervalIdForRepeatDigital: number | null;
    protected _pressable: Ch5Pressable | null;
    protected _pressTimeout: number;
    protected _buttonPressed: boolean;
    protected _buttonPressedInPressable: boolean;
    protected _pressableIsPressedSubscription: Subscription | null;
    protected isButtonInitiated: boolean;
    protected readonly TOUCH_TIMEOUT: number;
    protected readonly DEBOUNCE_PRESS_TIME: number;
    protected readonly PRESS_MOVE_THRESHOLD: number;
    protected readonly STATE_CHANGE_TIMEOUTS: number;
    protected readonly MAX_MODE_LENGTH: number;
    protected readonly DEBOUNCE_BUTTON_DISPLAY: number;
    static registerCustomElement(): void;
    static registerSignalAttributeTypes(): void;
    set labelMajor(value: string);
    get labelMajor(): string;
    set labelMinor(value: string);
    get labelMinor(): string;
    set iconClass(value: string);
    get iconClass(): string;
    set sendEventOnClick(value: string);
    get sendEventOnClick(): string;
    set key(value: string);
    get key(): string;
    set pressed(value: boolean);
    get pressed(): boolean;
    constructor(params: TCh5KeypadButtonCreateDTO);
    protected initAttributes(): void;
    connectedCallback(): void;
    protected createElementsAndInitialize(): void;
    protected createHtmlElements(): void;
    protected attachEventListeners(): void;
    disconnectedCallback(): void;
    removeEventListeners(): void;
    unsubscribeFromSignals(): void;
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    protected createLabelElementAndAppend(className: string, value?: string): HTMLSpanElement;
    protected labelMajorHandler(): void;
    protected labelMinorHandler(): void;
    protected keyHandler(): void;
    protected iconHandler(): void;
    protected pressedHandler(): void;
    protected updatePressedClass(pressedClass: string): void;
    protected bindEventListenersToThis(): void;
    protected sendValueForClickValue(value: boolean): void;
    protected _sendOnClickSignal(preventTrue?: boolean, preventFalse?: boolean): void;
    protected pressHandler(): Promise<boolean>;
    protected _subscribeToPressableIsPressed(): void;
    protected _unsubscribeFromPressableIsPressed(): void;
    setJoinBasedEventHandler(startIndex: number, joinCountIndex: number): void;
    setJoinBasedContractEventHandler(parentContract: string, joinIndex: number): void;
    protected _onTapAction(): void;
}

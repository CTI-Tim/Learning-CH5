import { Ch5Common } from "../ch5-common/ch5-common";
import { Ch5SignalElementAttributeRegistryEntries } from "../ch5-common/ch5-signal-attribute-registry";
import { TCh5AnimationSize, TCh5AnimationStyle } from './interfaces/t-ch5-animation';
import { ICh5AnimationAttributes } from './interfaces/i-ch5-animation-attributes';
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
export declare class Ch5Animation extends Ch5Common implements ICh5AnimationAttributes {
    static readonly SIZES: TCh5AnimationSize[];
    static readonly ANIMATION_STYLES: TCh5AnimationStyle[];
    static readonly ANIMATION_STYLES_CLASS: string[];
    static readonly COMPONENT_DATA: any;
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    static readonly ELEMENT_NAME = "ch5-animation";
    static readonly DEFAULT_FRAMES_PER_SECOND = 1500;
    static readonly MAX_FRAMES_PER_SECOND = 1;
    static readonly FRAMES_PER_SECOND_MIN = 3;
    static readonly FRAMES_PER_SECOND_MAX = 100;
    primaryCssClass: string;
    private _ch5Properties;
    private _elContainer;
    private _iconContainer;
    set startAnimating(value: boolean);
    get startAnimating(): boolean;
    set size(value: TCh5AnimationSize);
    get size(): TCh5AnimationSize;
    set animationStyle(value: TCh5AnimationStyle);
    get animationStyle(): TCh5AnimationStyle;
    set receiveStateAnimate(value: string);
    get receiveStateAnimate(): string;
    set receiveStateFramesPerSecond(value: string);
    get receiveStateFramesPerSecond(): string;
    set receiveStateAnimationStyle(value: string);
    get receiveStateAnimationStyle(): string;
    static registerSignalAttributeTypes(): void;
    static registerCustomElement(): void;
    constructor();
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected createInternalHtml(): void;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected removeEventListeners(): void;
    protected unsubscribeFromSignals(): void;
    private handleStartAnimating;
    private handleFramesPerSecond;
    private handleSize;
    private handleAnimationStyle;
    private updateCssClass;
    protected getTargetElementForCssClassesAndStyle(): HTMLElement;
    getCssClassDisabled(): string;
}

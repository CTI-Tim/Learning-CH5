import { Ch5TriggerView } from "./ch5-triggerview";
import { Ch5TriggerViewChild } from "./ch5-triggerview-child";
export declare class Ch5TriggerViewSlidesManager {
    static TRIGGERVIEW_SLIDER_CONTAINER_CLASS: string;
    static TRIGGERVIEW_SLIDES_WRAPPER_CLASS: string;
    static TRIGGERVIEW_SLIDE_CLASS: string;
    static TRIGGERVIEW_CHILD_SELECTOR: string;
    triggerViewEl: Ch5TriggerView;
    private _slidesGap;
    private isSwiperInitialized;
    private isCh5SwiperInitialized;
    private _swiper;
    private _ch5Swiper;
    private _transitionSpeed;
    private _externalWrapper;
    private _slidesWrapper;
    private _touchMoveListRelatedEventDisabled;
    constructor(el: Ch5TriggerView);
    prepareSwiperSlides(): void;
    initSwiper(): void;
    private getInitialSlide;
    setActiveIndexForLite(): void;
    private eventTargetBelongsToCh5List;
    reinitializeSwiper(): void;
    set swiperSensitivity(newThreshold: number);
    swiperIsActive(): boolean;
    ch5SwiperIsActive(): boolean;
    destroySwiper(): void;
    getSlidesNumber(): number;
    swiperActiveViewInitialized(): boolean;
    initSlides(slides: HTMLElement[]): void;
    swipeTo(slideBaseOneIndex: number, instantTransition?: boolean, speed?: number): void;
    getChildElSwipeIndex(childView: Ch5TriggerViewChild): number | null;
    slideNext(): void;
    slidePrevious(): void;
    setAllowTouchMove(active: boolean): void;
    refreshSlideSpeed(): void;
    getActiveIndex(): number;
    getSwiperParam(paramName: string): any;
    getTriggerViewChildSlides(): HTMLElement[];
    private _createSlidesWrappers;
    private _computeSizes;
    private _getSlidesGap;
    private _updateActiveSlideAttributes;
    private _updateTriggerViewElActiveViewWhenChangedBySwiper;
    private _getSlidingSpeed;
    getSlidesArray(): HTMLElement[] | import("dom7").Dom7Array;
}

import { Ch5Common } from "../ch5-common/ch5-common";
import { ICh5ImageAttributes } from "./interfaces/i-ch5-image-attributes";
import { Ch5SignalElementAttributeRegistryEntries } from '../ch5-common/ch5-signal-attribute-registry';
export interface IShowStyle {
    visibility: string;
    opacity: string;
    display: string;
}
export declare class Ch5Image extends Ch5Common implements ICh5ImageAttributes {
    static readonly ELEMENT_NAME = "ch5-image";
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_DATA: any;
    private readonly MODES;
    get alt(): string;
    set alt(value: string);
    get height(): string;
    set height(value: string);
    get width(): string;
    set width(value: string);
    get refreshRate(): number;
    set refreshRate(value: number);
    get url(): string;
    set url(value: string);
    get direction(): string | null;
    set direction(value: string | null);
    set mode(value: number);
    get mode(): number;
    set receiveStateUser(value: string);
    get receiveStateUser(): string;
    set receiveStatePassword(value: string);
    get receiveStatePassword(): string;
    get receiveStateUrl(): string;
    set receiveStateUrl(value: string);
    get receiveStateMode(): string;
    set receiveStateMode(value: string);
    get sendEventOnClick(): string;
    set sendEventOnClick(value: string);
    set sendEventOnError(value: string);
    get sendEventOnError(): string;
    set sendEventOnTouch(value: string);
    get sendEventOnTouch(): string;
    set user(userName: string);
    get user(): string;
    set password(password: string);
    get password(): string;
    set protocol(protocol: string);
    get protocol(): string;
    constructor();
    static get observedAttributes(): string[];
    primaryCssClass: string;
    private _img;
    private _alt;
    private _height;
    private _width;
    private _refreshRate;
    private _url;
    private _direction;
    private _sigNameReceiveUrl;
    private _sigNameReceiveUser;
    private _sigNameReceivePassword;
    private _sigNameReceiveMode;
    private _subReceiveUrl;
    private _subReceiveUser;
    private _subReceivePassword;
    private _subReceiveMode;
    private _sigNameSendOnClick;
    private _sigNameSendOnError;
    private _sigNameSendOnTouch;
    private _pressable;
    errorEvent: Event;
    private _timerIdForTouch;
    private _longTouch;
    private _intervalIdForOnTouch;
    private _intervalTimeoutForOnTouch;
    private _intervalIdForRefresh;
    private _imageWasLoaded;
    private _user;
    private _password;
    private _protocol;
    private _isPressedSubscription;
    private _buttonPressedInPressable;
    private _repeatDigitalInterval;
    private STATE_CHANGE_TIMEOUTS;
    private _mode;
    static registerSignalAttributeTypes(): void;
    getModeNodes(): NodeListOf<Element>;
    getModeNode(index: number): Element;
    connectedCallback(): void;
    disconnectedCallback(): void;
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    unsubscribeFromSignals(): void;
    setImageDisplay(value?: string): void;
    private setUrlByInput;
    processUri(): void;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected updateCssClasses(): void;
    private _subscribeToPressableIsPressed;
    private sendValueForRepeatDigitalWorking;
    enableImageLoading(): void;
    disableImageLoading(): void;
    getCssClassDisabled(): string;
    canProcessUri(): boolean;
    isVisible(): boolean;
    protected afterHandlingShow(): void;
    protected afterHandlingHide(): void;
    private removeEvents;
    private _maybeLoadImage;
    private _initRefreshRate;
    protected _onTouchStart(inEvent: Event): void;
    protected _onTouchEnd(inEvent: Event): void;
    private _onTouchMove;
    protected _onTouchCancel(inEvent: Event): void;
    private _onClick;
    private _onError;
    private _onLongTouch;
    private _stopSendSignalOnTouch;
    private _sendValueForTouchSignal;
    private _sendValueForClickSignal;
    private _sendValueForErrorSignal;
    private _insertParamToUrl;
    private _getUrlVars;
    updateElementInViewportChange(visibility: boolean): void;
}

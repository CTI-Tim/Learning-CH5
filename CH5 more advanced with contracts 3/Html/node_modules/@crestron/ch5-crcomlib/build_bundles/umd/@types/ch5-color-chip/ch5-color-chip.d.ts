import { Ch5Common } from "../ch5-common/ch5-common";
import { Ch5SignalElementAttributeRegistryEntries } from "../ch5-common/ch5-signal-attribute-registry";
import { ICh5ColorChipAttributes } from './interfaces/i-ch5-color-chip-attributes';
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
export declare class Ch5ColorChip extends Ch5Common implements ICh5ColorChipAttributes {
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    static readonly ELEMENT_NAME = "ch5-color-chip";
    primaryCssClass: string;
    private _ch5Properties;
    private _elContainer;
    private redValue;
    private greenValue;
    private blueValue;
    private _onClick;
    set previewColor(value: string);
    get previewColor(): string;
    set maxValue(value: number);
    get maxValue(): number;
    set sendEventOnClick(value: string);
    get sendEventOnClick(): string;
    set receiveStateRedValue(value: string);
    get receiveStateRedValue(): string;
    set receiveStateGreenValue(value: string);
    get receiveStateGreenValue(): string;
    set receiveStateBlueValue(value: string);
    get receiveStateBlueValue(): string;
    set sendEventColorRedOnChange(value: string);
    get sendEventColorRedOnChange(): string;
    set sendEventColorGreenOnChange(value: string);
    get sendEventColorGreenOnChange(): string;
    set sendEventColorBlueOnChange(value: string);
    get sendEventColorBlueOnChange(): string;
    static registerSignalAttributeTypes(): void;
    static registerCustomElement(): void;
    constructor();
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected createInternalHtml(): void;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected removeEventListeners(): void;
    protected unsubscribeFromSignals(): void;
    private handlePreviewColor;
    protected getTargetElementForCssClassesAndStyle(): HTMLElement;
    getCssClassDisabled(): string;
    private handleSendSignals;
    private handleSendEventOnClick;
}

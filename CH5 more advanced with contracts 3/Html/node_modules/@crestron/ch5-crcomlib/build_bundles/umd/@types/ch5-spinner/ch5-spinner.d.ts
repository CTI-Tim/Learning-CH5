import { Ch5Common } from "../ch5-common/ch5-common";
import { Ch5SpinnerTemplate } from "./ch5-spinner-template";
import { Ch5SpinnerScroll } from "./ch5-spinner-scroll";
import { Ch5SpinnerEvents } from "./ch5-spinner-events";
import HtmlCallback from "../ch5-common/utils/html-callback";
import { ICh5SpinnerAttributes } from './interfaces/i-ch5-spinner-attributes';
import { TCh5CommonInputFeedbackModes } from '../ch5-common-input/interfaces/t-ch5-common-input';
import { TCh5SpinnerIconPosition } from './interfaces';
import { Ch5SignalElementAttributeRegistryEntries } from '../ch5-common/ch5-signal-attribute-registry';
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
export declare class Ch5Spinner extends Ch5Common implements ICh5SpinnerAttributes {
    static readonly ELEMENT_NAME = "ch5-spinner";
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static get observedAttributes(): string[];
    constructor();
    set ondirty(callback: HtmlCallback | {});
    get ondirty(): HtmlCallback | {};
    set onclean(callback: HtmlCallback | {});
    get onclean(): HtmlCallback | {};
    set templateHelper(templateHelper: Ch5SpinnerTemplate);
    get templateHelper(): Ch5SpinnerTemplate;
    get scrollHelper(): Ch5SpinnerScroll;
    set scrollHelper(value: Ch5SpinnerScroll);
    get eventsHelper(): Ch5SpinnerEvents;
    set eventsHelper(value: Ch5SpinnerEvents);
    get selectedItem(): HTMLElement;
    set selectedItem(value: HTMLElement);
    get cleanItem(): number;
    set cleanItem(value: number);
    get receiveStateValueSub(): string;
    set receiveStateValueSub(value: string);
    get receiveStateSizeSub(): string;
    set receiveStateSizeSub(value: string);
    get wasInstantiated(): boolean;
    set wasInstantiated(value: boolean);
    set size(size: number);
    get size(): number;
    set iconPosition(position: TCh5SpinnerIconPosition);
    get iconPosition(): TCh5SpinnerIconPosition;
    set selectedValue(value: number);
    get selectedValue(): number;
    get selectedValueIndex(): number;
    set itemHeight(height: string);
    get itemHeight(): string;
    set visibleItemScroll(items: number);
    get visibleItemScroll(): number;
    set resize(resize: boolean);
    get resize(): boolean;
    set endless(endless: boolean);
    get endless(): boolean;
    set indexId(id: string);
    get indexId(): string;
    set receiveStateValue(value: string);
    get receiveStateValue(): string;
    set receiveStateSize(value: string);
    get receiveStateSize(): string;
    set receiveStateLabel(value: string);
    get receiveStateLabel(): string;
    set receiveStateUrl(value: string);
    get receiveStateUrl(): string;
    set sendEventOnFocus(value: string);
    get sendEventOnFocus(): string;
    set sendEventOnChange(value: string);
    get sendEventOnChange(): string;
    set sendEventOnOverflow(value: string);
    get sendEventOnOverflow(): string;
    set sendEventOnUnderflow(value: string);
    get sendEventOnUnderflow(): string;
    set feedbackMode(value: TCh5CommonInputFeedbackModes);
    get feedbackMode(): TCh5CommonInputFeedbackModes;
    set signalValueSyncTimeout(value: number);
    get signalValueSyncTimeout(): number;
    set label(value: string);
    get label(): string;
    set autoSetItemHeight(value: boolean);
    get autoSetItemHeight(): boolean;
    static primaryCssClass: string;
    static VISIBLEITEMSCROLL: number;
    static SYNCTIMEOUT: number;
    static ITEM_HEIGHT_WHEN_EMPTY: string;
    static ICONPOSITIONS: TCh5SpinnerIconPosition[];
    static FEEDBACKMODES: TCh5CommonInputFeedbackModes[];
    static readonly COMPONENT_DATA: any;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    private static MAX_SIZE;
    private _ch5Properties;
    private _size;
    private _iconPosition;
    private _selectedValue;
    private _itemHeight;
    private _visibleItemScroll;
    private _resize;
    private _endless;
    private _feedbackMode;
    private _signalValueSyncTimeout;
    private _indexId;
    private _label;
    private _receiveStateValue;
    private _receiveStateSize;
    private _receiveStateUrl;
    private _sendEventOnFocus;
    private _sendEventOnChange;
    private _sendEventOnOverflow;
    private _sendEventOnUnderflow;
    private _templateHelper;
    private _scrollHelper;
    private _eventsHelper;
    private _selectedItem;
    private _cleanItem;
    private _receiveStateValueSub;
    _receiveStateLabelSub: string;
    private _receiveStateSizeSub;
    private _receiveStateLabel;
    private _onclean;
    private _ondirty;
    private _wasInstantiated;
    dirtyFlag: boolean;
    private _mutationObserver;
    static registerSignalAttributeTypes(): void;
    static registerSignalAttributeDefaults(): void;
    connectedCallback(): void;
    initSignals(): void;
    dirtyTimeHandler(): void;
    disconnectedCallback(): void;
    unsubscribeFromSignals(): void;
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    addAriaAttributes(): void;
    registerReceiveSignalValue(): void;
    registerReceiveSignalLabel(): void;
    registerReceiveSignalSize(): void;
    repaint(): void;
    submit(): void;
    reset(): void;
    getValue(): number;
    setValue(value: number): void;
    getDirty(): boolean;
    private adjustMaxSizeValue;
    getItemHeightValue(): number;
    getItemHeightMeasurementUnit(): string;
    getHighlightOffsetValue(): number;
    getHighlightOffset(): string;
    initAttributes(): void;
    protected initUtilities(): void;
    protected dirtyHandler(): void;
    protected translateCallback(section: string): void;
}

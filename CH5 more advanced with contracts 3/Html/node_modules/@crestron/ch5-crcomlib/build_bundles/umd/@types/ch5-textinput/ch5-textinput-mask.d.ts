export declare class Ch5tTextInputMask {
    prefix: string;
    readonly MODIFIER_SEPARATOR: string;
    readonly BLOCK_SEPARATOR: string;
    private _didMounted;
    private _wasWrapped;
    private _wrapperId;
    private _input;
    private _maskElement;
    private _maskValue;
    private _lastValueLength;
    private _inputType;
    private _alwaysShow;
    private _show;
    private _placeholder;
    private _inputListener;
    private _inputKeyUpListener;
    private _inputKeyDownListener;
    private _inputBlurListener;
    private _inputFocusListener;
    constructor(input: HTMLInputElement, pattern: string, alwaysShow?: boolean);
    init(): void;
    stop(): void;
    dispatchMaskErrorEvent(errorType?: string): void;
    dispatchMaskUpdateEvent(): void;
    dispatchMaskCompleteEvent(): void;
    set didMounted(mounted: boolean);
    get didMounted(): boolean;
    set input(input: HTMLInputElement);
    get input(): HTMLInputElement;
    set wasWrapped(wrapped: boolean);
    get wasWrapped(): boolean;
    set wrapperId(id: number);
    get wrapperId(): (number);
    set maskElement(element: HTMLElement);
    get maskElement(): HTMLElement;
    set maskValue(value: string);
    get maskValue(): string;
    getInputStyles(): CSSStyleDeclaration;
    set lastValueLength(length: number);
    get lastValueLength(): number;
    set inputType(action: string);
    get inputType(): string;
    set alwaysShow(show: boolean);
    get alwaysShow(): boolean;
    set show(value: boolean);
    get show(): boolean;
    set placeholder(placeholder: string);
    get placeholder(): string;
    _makeMaskElementLookAsInputPlaceholder(): void;
    addStaticCharactersToInputValue(letterIndex: number): void;
    _updateCharactersInMask(): void;
    togglePlaceholder(): void;
    _attachEventListeners(): void;
    _detachEventListeners(): void;
    private _mount;
    private _wrap;
    private _createTheWrapper;
    private _createTheMaskElement;
    private _cleanTheInput;
    private _wrapEachCharacter;
    private _createMaskUpdateEvent;
    private _createInputMaskErrorEvent;
    private _createInputMaskCompleteEvent;
    private _maskCharacterOnTyping;
    private _unmaskCharacterOnTyping;
    private _isUserTyping;
    private _isKeyAllowed;
    private _isValueLengthValid;
    private _getDataType;
    private _getCapsType;
    private _transformLetterCapsType;
    private _onInputKeyDown;
    private _onInput;
    private _onInputKeyUp;
    private _onInputFocus;
    private _onInputBlur;
    private _onMaskUpdate;
}

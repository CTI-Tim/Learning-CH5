import { Ch5Button } from "../../ch5-button/ch5-button";
import { Ch5Common } from "../../ch5-common/ch5-common";
import { Ch5SignalElementAttributeRegistryEntries } from "../../ch5-common/ch5-signal-attribute-registry";
import { TCh5ButtonListButtonType, TCh5ButtonListButtonHAlignLabel, TCh5ButtonListButtonVAlignLabel, TCh5ButtonListButtonCheckboxPosition, TCh5ButtonListButtonIconPosition, TCh5ButtonListButtonShape, TCh5ButtonListAttributesOrientation, TCh5ButtonListAttributesStretch, TCh5ButtonListContractItemLabelType, TCh5ButtonListContractItemIconType, TCh5ButtonListSgIconTheme, TCh5ButtonListAttributesLoadItems, TCh5ButtonListButtonIconUrlFillType } from './../interfaces/t-ch5-button-list';
import { ICh5ButtonListAttributes } from './../interfaces/i-ch5-button-list-attributes';
import { Ch5Properties } from "../../ch5-core/ch5-properties";
import { ICh5PropertySettings } from "../../ch5-core/ch5-property";
import { Ch5Signal } from "../../ch5-core/ch5-signal";
export declare class Ch5ButtonListBase extends Ch5Common implements ICh5ButtonListAttributes {
    static readonly ROWS_CLASSLIST_PREFIX: string;
    static readonly COLUMNS_CLASSLIST_PREFIX: string;
    static readonly SCROLLBAR_CLASSLIST_PREFIX: string;
    static readonly CENTER_ITEMS_CLASSLIST_PREFIX: string;
    static readonly BUTTON_CONTAINER_BUFFER: number;
    static readonly MODES_MAX_COUNT: number;
    static readonly ORIENTATION: TCh5ButtonListAttributesOrientation[];
    static readonly LOAD_ITEMS: TCh5ButtonListAttributesLoadItems[];
    static readonly STRETCH: TCh5ButtonListAttributesStretch[];
    static readonly CONTRACT_ITEM_LABEL_TYPE: TCh5ButtonListContractItemLabelType[];
    static readonly CONTRACT_ITEM_ICON_TYPE: TCh5ButtonListContractItemIconType[];
    static readonly BUTTON_TYPES: TCh5ButtonListButtonType[];
    static readonly BUTTON_HALIGN_LABEL_POSITIONS: TCh5ButtonListButtonHAlignLabel[];
    static readonly BUTTON_VALIGN_LABEL_POSITIONS: TCh5ButtonListButtonVAlignLabel[];
    static readonly BUTTON_CHECKBOX_POSITIONS: TCh5ButtonListButtonCheckboxPosition[];
    static readonly BUTTON_ICON_POSITIONS: TCh5ButtonListButtonIconPosition[];
    static readonly BUTTON_SHAPES: TCh5ButtonListButtonShape[];
    static readonly BUTTON_ICON_URL_FILL_TYPE: TCh5ButtonListButtonIconUrlFillType[];
    static readonly SG_ICON_THEME: TCh5ButtonListSgIconTheme[];
    static COMPONENT_DATA: any;
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    primaryCssClass: string;
    protected _ch5Properties: Ch5Properties;
    protected _elContainer: HTMLElement;
    private _scrollbarContainer;
    private _scrollbar;
    private isDown;
    private startX;
    private startY;
    private scrollListLeft;
    private scrollListTop;
    private scrollbarDimension;
    private buttonWidth;
    private buttonHeight;
    private signalNameOnContract;
    private rowClassValue;
    private columnClassValue;
    private selectedButton;
    private showSignalHolder;
    private loadButtonForShow;
    private allButtonsVisible;
    debounceButtonDisplay: (...args: any[]) => void;
    debounceButtonShow: (...args: any[]) => void;
    set orientation(value: TCh5ButtonListAttributesOrientation);
    get orientation(): TCh5ButtonListAttributesOrientation;
    set loadItems(value: TCh5ButtonListAttributesLoadItems);
    get loadItems(): TCh5ButtonListAttributesLoadItems;
    set scrollbar(value: boolean);
    get scrollbar(): boolean;
    set centerItems(value: boolean);
    get centerItems(): boolean;
    set stretch(value: TCh5ButtonListAttributesStretch | null);
    get stretch(): TCh5ButtonListAttributesStretch | null;
    set buttonIconUrlFillType(value: TCh5ButtonListButtonIconUrlFillType | null);
    get buttonIconUrlFillType(): TCh5ButtonListButtonIconUrlFillType | null;
    set endless(value: boolean);
    get endless(): boolean;
    set numberOfItems(value: number);
    get numberOfItems(): number;
    set rows(value: number);
    get rows(): number;
    set columns(value: number);
    get columns(): number;
    set indexId(value: string);
    get indexId(): string;
    set receiveStateNumberOfItems(value: string);
    get receiveStateNumberOfItems(): string;
    set scrollToPosition(value: number);
    get scrollToPosition(): number;
    set receiveStateScrollToPosition(value: string);
    get receiveStateScrollToPosition(): string;
    set receiveStateSelectedButton(value: string);
    get receiveStateSelectedButton(): string;
    set contractName(value: string);
    get contractName(): string;
    set useContractForEnable(value: boolean);
    get useContractForEnable(): boolean;
    set useContractForShow(value: boolean);
    get useContractForShow(): boolean;
    set useContractForItemEnable(value: boolean);
    get useContractForItemEnable(): boolean;
    set useContractForItemShow(value: boolean);
    get useContractForItemShow(): boolean;
    set useContractForCustomStyle(value: boolean);
    get useContractForCustomStyle(): boolean;
    set useContractForCustomClass(value: boolean);
    get useContractForCustomClass(): boolean;
    set useContractForEachButtonSelection(value: boolean);
    get useContractForEachButtonSelection(): boolean;
    set contractItemLabelType(value: TCh5ButtonListContractItemLabelType);
    get contractItemLabelType(): TCh5ButtonListContractItemLabelType;
    set contractItemIconType(value: TCh5ButtonListContractItemIconType);
    get contractItemIconType(): TCh5ButtonListContractItemIconType;
    set useContractForNumItems(value: boolean);
    get useContractForNumItems(): boolean;
    set buttonType(value: TCh5ButtonListButtonType);
    get buttonType(): TCh5ButtonListButtonType;
    set buttonHAlignLabel(value: TCh5ButtonListButtonHAlignLabel);
    get buttonHAlignLabel(): TCh5ButtonListButtonHAlignLabel;
    set buttonVAlignLabel(value: TCh5ButtonListButtonVAlignLabel);
    get buttonVAlignLabel(): TCh5ButtonListButtonVAlignLabel;
    set buttonCheckboxPosition(value: TCh5ButtonListButtonCheckboxPosition);
    get buttonCheckboxPosition(): TCh5ButtonListButtonCheckboxPosition;
    set buttonIconPosition(value: TCh5ButtonListButtonIconPosition);
    get buttonIconPosition(): TCh5ButtonListButtonIconPosition;
    set buttonShape(value: TCh5ButtonListButtonShape);
    get buttonShape(): TCh5ButtonListButtonShape;
    set buttonCheckboxShow(value: boolean);
    get buttonCheckboxShow(): boolean;
    set buttonSelected(value: boolean);
    get buttonSelected(): boolean;
    set buttonPressed(value: boolean);
    get buttonPressed(): boolean;
    set buttonMode(value: number);
    get buttonMode(): number;
    set buttonIconClass(value: string);
    get buttonIconClass(): string;
    set buttonIconUrl(value: string);
    get buttonIconUrl(): string;
    set buttonLabelInnerHtml(value: string);
    get buttonLabelInnerHtml(): string;
    set buttonReceiveStateMode(value: string);
    get buttonReceiveStateMode(): string;
    set buttonReceiveStateSelected(value: string);
    get buttonReceiveStateSelected(): string;
    set buttonReceiveStateLabel(value: string);
    get buttonReceiveStateLabel(): string;
    set buttonReceiveStateScriptLabelHtml(value: string);
    get buttonReceiveStateScriptLabelHtml(): string;
    set buttonReceiveStateIconClass(value: string);
    get buttonReceiveStateIconClass(): string;
    set buttonReceiveStateIconUrl(value: string);
    get buttonReceiveStateIconUrl(): string;
    set buttonReceiveStateSGIconString(value: string);
    get buttonReceiveStateSGIconString(): string;
    set buttonReceiveStateSGIconNumeric(value: string);
    get buttonReceiveStateSGIconNumeric(): string;
    set buttonSgIconTheme(value: TCh5ButtonListSgIconTheme);
    get buttonSgIconTheme(): TCh5ButtonListSgIconTheme;
    set buttonSendEventOnClick(value: string);
    get buttonSendEventOnClick(): string;
    set buttonReceiveStateShow(value: string);
    get buttonReceiveStateShow(): string;
    set buttonReceiveStateEnable(value: string);
    get buttonReceiveStateEnable(): string;
    set clickHoldTime(value: number);
    get clickHoldTime(): number;
    constructor();
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected createInternalHtml(): void;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected removeEventListeners(): void;
    protected unsubscribeFromSignals(): void;
    private handleMouseDown;
    private handleMouseUpAndLeave;
    private handleMouseMove;
    private handleScrollEvent;
    private scrollHelperForNew;
    private scrollHelper;
    private endlessHelper;
    private endlessHelperForNew;
    private clearComponentContent;
    handleOrientation(): void;
    handleScrollbar(): void;
    handleRowsAndColumn(): void;
    handleStretch(): void;
    handleCenterItems(): void;
    handleEndless(): void;
    handleScrollToPosition(value: number): void;
    handleScrollToPositionForNew(value: number): void;
    handleScrollToPositionForAll(value: number): void;
    buttonDisplay(isReceiveStateScrollTo?: boolean): void;
    buttonDisplayForLoadItemsNew(isReceiveStateScrollTo?: boolean): void;
    buttonDisplayForLoadItemsAll(isReceiveStateScrollTo?: boolean): void;
    private createButton;
    protected buttonModeHelper(btn: Ch5Button, i: number): void;
    private buttonLabelHelper;
    private buttonHelper;
    private replaceAll;
    private contractDefaultHelper;
    private contractButtonHelper;
    private indexIdReplaceHelper;
    private initCssClass;
    protected initScrollbar(): void;
    private checkInternalHTML;
    private handleContractName;
    private signalHolder;
    private clearOldSubscription;
    setSignalByBoolean(signalValue: string): Ch5Signal<boolean> | null;
    private buttonShow;
    private getFirstChild;
    private getLastChild;
    private scrollToRightEdgeRange;
    private scrollToMiddleRange;
    private scrollToLeftEdgeRange;
    private handleReceiveStateSelectedButton;
    private resizeHandler;
    protected getTargetElementForCssClassesAndStyle(): HTMLElement;
    getCssClassDisabled(): string;
}

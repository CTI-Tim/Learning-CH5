import { Ch5Common } from "../ch5-common/ch5-common";
import { ICh5DpadAttributes } from "./interfaces/i-ch5-dpad-attributes";
import { TCh5DpadShape, TCh5DpadStretch, TCh5DpadType, TCh5DpadSize } from "./interfaces/t-ch5-dpad";
import { Ch5SignalElementAttributeRegistryEntries } from "../ch5-common/ch5-signal-attribute-registry";
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
export declare class Ch5Dpad extends Ch5Common implements ICh5DpadAttributes {
    static readonly ELEMENT_NAME = "ch5-dpad";
    static readonly TYPES: TCh5DpadType[];
    static readonly SHAPES: TCh5DpadShape[];
    static readonly STRETCHES: TCh5DpadStretch[];
    static readonly SIZES: TCh5DpadSize[];
    static readonly CSS_CLASS_PREFIX_STRETCH: string;
    static readonly CSS_CLASS_PREFIX_TYPE: string;
    static readonly CSS_CLASS_PREFIX_SHAPE: string;
    static readonly CSS_CLASS_PREFIX_SIZE: string;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    static readonly COMPONENT_DATA: any;
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    readonly primaryCssClass = "ch5-dpad";
    private _ch5Properties;
    private isResizeInProgress;
    private readonly RESIZE_DEBOUNCE;
    private container;
    private containerClass;
    static registerSignalAttributeTypes(): void;
    static registerCustomElement(): void;
    set contractName(value: string);
    get contractName(): string;
    set type(value: TCh5DpadType);
    get type(): TCh5DpadType;
    set shape(value: TCh5DpadShape);
    get shape(): TCh5DpadShape;
    set stretch(value: TCh5DpadStretch | null);
    get stretch(): TCh5DpadStretch | null;
    set size(value: TCh5DpadSize);
    get size(): TCh5DpadSize;
    set sendEventOnClickStart(value: string);
    get sendEventOnClickStart(): string;
    set useContractForEnable(value: boolean);
    get useContractForEnable(): boolean;
    set useContractForShow(value: boolean);
    get useContractForShow(): boolean;
    set useContractForCustomStyle(value: boolean);
    get useContractForCustomStyle(): boolean;
    set useContractForCustomClass(value: boolean);
    get useContractForCustomClass(): boolean;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    private removeEvents;
    unsubscribeFromSignals(): void;
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    protected createHtmlElements(): void;
    protected updateHtmlElements(): void;
    private createEmptyContainerDiv;
    private createAndAppendAllButtonsUnderDpad;
    private createAndAppendAllExistingButtonsUnderDpad;
    private appendButtonsInRightOrder;
    private checkIfOrderOfTagsAreInTheRightOrder;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected updateCssClasses(): void;
    protected initCssClasses(): void;
    private checkAndRestructureDomOfDpad;
    private updateEventClickHandlers;
    private updateContractNameBasedHandlers;
    private stretchHandler;
    private onWindowResizeHandler;
}

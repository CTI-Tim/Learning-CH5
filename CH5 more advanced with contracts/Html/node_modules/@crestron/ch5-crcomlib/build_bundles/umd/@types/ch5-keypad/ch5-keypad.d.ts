import { Ch5Common } from "../ch5-common/ch5-common";
import { ICh5KeypadAttributes } from "./interfaces/i-ch5-keypad-attributes";
import { TCh5KeypadButtonCreateDTO, TCh5KeypadShape, TCh5KeypadSize, TCh5KeypadStretch, TCh5KeypadTextOrientation, TCh5KeypadType } from "./interfaces/t-ch5-keypad";
import { Ch5SignalElementAttributeRegistryEntries } from '../ch5-common/ch5-signal-attribute-registry';
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
export declare class Ch5Keypad extends Ch5Common implements ICh5KeypadAttributes {
    static readonly ELEMENT_NAME = "ch5-keypad";
    private static readonly NUMBER_TYPE_BUTTON_CSS_CLASS;
    private static readonly MISC_ONE_BUTTON_CSS_CLASS;
    private static readonly MISC_TWO_BUTTON_CSS_CLASS;
    private static readonly EXTRA_BUTTON_CSS_CLASS;
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly TYPES: TCh5KeypadType[];
    static readonly SHAPES: TCh5KeypadShape[];
    static readonly STRETCHES: TCh5KeypadStretch[];
    static readonly TEXT_ORIENTATIONS: TCh5KeypadTextOrientation[];
    static readonly SIZES: TCh5KeypadSize[];
    static readonly btnTypeClassPrefix: string;
    static readonly btnStretchClassPrefix: string;
    static readonly btnShapeClassPrefix: string;
    static readonly btnTextOrientationClassPrefix: string;
    static readonly btnSizeClassPrefix: string;
    static readonly COMPONENT_DATA: any;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    readonly primaryCssClass = "ch5-keypad";
    private isResizeInProgress;
    private readonly resizeDebounce;
    private _ch5Properties;
    private container;
    private containerClass;
    private keysRowClass;
    private keysRowClassExtra;
    private childButtonList;
    private runtimeChildButtonList;
    private signalNameOnContract;
    static registerCustomElement(): void;
    static registerSignalAttributeTypes(): void;
    set contractName(value: string);
    get contractName(): string;
    set type(value: TCh5KeypadType);
    get type(): TCh5KeypadType;
    set shape(value: TCh5KeypadShape);
    get shape(): TCh5KeypadShape;
    set stretch(value: TCh5KeypadStretch | null);
    get stretch(): TCh5KeypadStretch | null;
    set size(value: TCh5KeypadSize);
    get size(): TCh5KeypadSize;
    set textOrientation(value: TCh5KeypadTextOrientation);
    get textOrientation(): TCh5KeypadTextOrientation;
    set showExtraButton(value: boolean);
    get showExtraButton(): boolean;
    set sendEventOnClickStart(value: string);
    get sendEventOnClickStart(): string;
    set useContractForEnable(value: boolean);
    get useContractForEnable(): boolean;
    set useContractForShow(value: boolean);
    get useContractForShow(): boolean;
    set useContractForCustomStyle(value: boolean);
    get useContractForCustomStyle(): boolean;
    set useContractForCustomClass(value: boolean);
    get useContractForCustomClass(): boolean;
    set useContractForExtraButtonShow(value: boolean);
    get useContractForExtraButtonShow(): boolean;
    set receiveStateExtraButtonShow(value: string);
    get receiveStateExtraButtonShow(): string;
    constructor();
    protected initAttributes(): void;
    connectedCallback(): void;
    private onAllSubElementsCreated;
    disconnectedCallback(): void;
    private removeEvents;
    unsubscribeFromSignals(): void;
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    protected updateCssClasses(): void;
    protected attachEventListeners(): void;
    protected createHtmlElements(): void;
    private createAndAppendAllButtonsUnderKeypad;
    private createEmptyContainerDiv;
    private showExtraButtonHandler;
    private appendKeysRowToContainer;
    private buildRuntimeChildButtonList;
    private shapeHandler;
    private setContainerHeightAndWidth;
    private stretchHandler;
    private typeHandler;
    private textOrientationHandler;
    private updateEventClickHandlers;
    private sizeHandler;
    private contractDefaultHandler;
    private contractDefaultHelper;
    private updateContractBasedEvent;
    private onWindowResizeHandler;
    getBtnList(runtimeChildButtonList: {
        [key: string]: TCh5KeypadButtonCreateDTO;
    }, parentContractName: string, sendEventOnClickStartVal: string): TCh5KeypadButtonCreateDTO[];
    getBtnList_Extra(runtimeChildButtonList: {
        [key: string]: TCh5KeypadButtonCreateDTO;
    }, parentContractName: string, sendEventOnClickStartVal?: string): TCh5KeypadButtonCreateDTO[];
    getChildBtnDTOFromElement(ele: Element, parentContractName: string, sendEventOnClickStart: string): TCh5KeypadButtonCreateDTO;
    private getIndexRefForChildBtn;
    private getClassNameForChildBtn;
}

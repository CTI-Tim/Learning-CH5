import { Ch5Common } from '../ch5-common/ch5-common';
import { TCh5ListElementOrientation } from "./interfaces";
import { Ch5ListTemplate } from './ch5-list-template';
import { Ch5ListEventManager } from './ch5-list-event-manager';
import { Ch5ListSignalManager } from './ch5-list-signal-manager';
import { Ch5ListAnimation } from './ch5-list-animation';
import { Ch5ListBufferedItems, ICh5ListBufferedItems } from './ch5-list-buffered-items';
import { ICh5ListAttributes } from "./interfaces";
import { Ch5ListSizeResolver } from './ch5-list-size-resolver';
import { Ch5SignalElementAttributeRegistryEntries } from "../ch5-common/ch5-signal-attribute-registry";
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
export interface ICh5ListItemInfo {
    element: HTMLElement;
    layoutIndex: number;
    translateX: number;
    translateY: number;
}
export declare enum Ch5ListItemAxis {
    X = 0,
    Y = 1
}
export declare type Ch5ListSignature = {
    [key: string]: any;
};
export declare const duration = 300;
export declare const easeMode = "ease-out";
export declare class Ch5List extends Ch5Common implements ICh5ListAttributes {
    static readonly ELEMENT_NAME = "ch5-list";
    static ORIENTATION: TCh5ListElementOrientation[];
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_DATA: any;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    static ENABLED_CLASS_NAME: string;
    static ITEMCLASS: string;
    private _ch5Properties;
    primaryCssClass: string;
    _bufferedItems: ICh5ListBufferedItems;
    _appendPosition: number;
    _divListWidth: number;
    _divListHeight: number;
    itemOffsetWidth: number;
    itemOffsetHeight: number;
    viewportClientHeight: number;
    viewportClientWidth: number;
    templateHelper: Ch5ListTemplate;
    eventManager: Ch5ListEventManager;
    animationHelper: Ch5ListAnimation;
    signalManager: Ch5ListSignalManager;
    bufferdItemsHelper: Ch5ListBufferedItems;
    divList: HTMLDivElement;
    pointerStartTime: number;
    pointerEndTime: number;
    stepOnX: number;
    stepOnY: number;
    currentPage: number;
    templateElement: HTMLTemplateElement;
    sizeResolver: Ch5ListSizeResolver;
    private _currentXPosition;
    private _currentYPosition;
    private _defaultScrollToTime;
    private _size;
    private _previousSize;
    private _orientation;
    private _bufferAmount;
    private _itemHeight;
    private _itemWidth;
    private _minWidth;
    private _maxWidth;
    private _minHeight;
    private _maxHeight;
    private _pagedSwipe;
    private _endless;
    private _scrollToTime;
    private _indexId;
    private _direction;
    private _templateVars;
    private _receiveStateSize;
    private _receiveStateSizeSub;
    private _receiveStateScrollTo;
    private _receiveStateScrollToSub;
    private _receiveStateTemplateVars;
    private _receiveStateTemplateVarsSub;
    private _processingPan;
    private _storedOffsetWidth;
    private _storedOffsetHeight;
    private _tplHtmlString;
    private _updateTimer;
    private _isPointerActive;
    private _pointerId;
    private _pointerFirstX;
    private _pointerFirstY;
    private _pointerLastX;
    private _pointerLastY;
    private _pointerCurrentX;
    private _pointerCurrentY;
    private _lastDraggedLayoutIndex;
    private _trackingPointsX;
    private _trackingPointsY;
    private _dragTicking;
    private _maxDecelVelocity;
    private _minDecelVelocity;
    private _friction;
    private _attraction;
    private _decelVelocity;
    private _decelerating;
    private _scrollToTimeReference;
    private _initCompleted;
    private _cachedFirstRenderVisibleItemsNr;
    private _items;
    private _lastViewIndex;
    private _infiniteLoop;
    private _wrapperTranslateX;
    private _wrapperTranslateY;
    private _selectedIteration;
    private _previousEffectiveLayoutIndex;
    private _isListVisible;
    private receiveStateScrollToChanged;
    static registerSignalAttributeTypes(): void;
    static registerSignalAttributeDefaults(): void;
    static registerCustomElement(): void;
    constructor();
    getCssClassDisabled(): string;
    connectedCallback(): void;
    initializations(): void;
    disconnectedCallback(): void;
    unsubscribeFromSignals(): void;
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    getItemSize(): number;
    getItemsPerPage(): number;
    getVisibleItemsPerPage(): number;
    _canUseBufferAmount(firstRenderVisibleItemsNr: number): boolean;
    getFirstRenderVisibleItemsNr(resetFirstRenderVisItemsNrCache?: boolean): number;
    swipe(func: Promise<void>): void;
    static get observedAttributes(): string[];
    set currentXPosition(position: number);
    get currentXPosition(): number;
    set currentYPosition(position: number);
    get currentYPosition(): number;
    get isVertical(): boolean;
    get isHorizontal(): boolean;
    get size(): number | null;
    set size(value: number | null);
    get previousSize(): number | null;
    set previousSize(value: number | null);
    get orientation(): TCh5ListElementOrientation | null;
    set orientation(value: TCh5ListElementOrientation | null);
    get bufferAmount(): number | null;
    set bufferAmount(value: number | null);
    get itemHeight(): string | null;
    set itemHeight(value: string | null);
    get itemWidth(): string | null;
    set itemWidth(value: string | null);
    get minWidth(): string | null;
    set minWidth(value: string | null);
    get maxWidth(): string | null;
    set maxWidth(value: string | null);
    isLtr(): boolean;
    private getMaxWidthInPxFromPercentage;
    private getMaxHeightInPxFromPercentage;
    private calculatePxSize;
    get minHeight(): string | null;
    set minHeight(value: string | null);
    get maxHeight(): string | null;
    set maxHeight(value: string | null);
    get indexId(): string | null;
    set indexId(value: string | null);
    get pagedSwipe(): boolean;
    set pagedSwipe(value: boolean);
    get endless(): boolean;
    set endless(value: boolean);
    set scrollbar(value: boolean);
    get scrollbar(): boolean;
    get scrollToTime(): number;
    set scrollToTime(value: number);
    get templateVars(): string | null;
    set templateVars(value: string | null);
    get direction(): string | null;
    set direction(value: string | null);
    set isPointerActive(status: boolean);
    get isPointerActive(): boolean;
    set pointerId(id: number);
    get pointerId(): number;
    set decelerating(decelerate: boolean);
    get decelerating(): boolean;
    set decelVelocity(velocity: number);
    get decelVelocity(): number;
    get receiveStateSize(): string | null | undefined;
    set receiveStateSize(value: string | null | undefined);
    getLayoutInfo(): Ch5ListSizeResolver;
    get receiveStateScrollTo(): string | null | undefined;
    set receiveStateScrollTo(value: string | null | undefined);
    private setScrollToContent;
    get receiveStateTemplateVars(): string | null | undefined;
    set receiveStateTemplateVars(value: string | null | undefined);
    get receiveStateSizeSub(): string;
    set receiveStateSizeSub(subscription: string);
    get receiveStateScrollToSub(): string;
    set receiveStateScrollToSub(subscription: string);
    get receiveStateTemplateVarsSub(): string;
    set receiveStateTemplateVarsSub(subscription: string);
    get selected(): number;
    set selected(index: number);
    set disableAnimation(value: boolean);
    get disableAnimation(): boolean;
    get appendPosition(): number;
    set appendPosition(position: number);
    set pointerFirstX(pointer: number);
    get pointerFirstX(): number;
    set pointerLastX(pointer: number);
    get pointerLastX(): number;
    set pointerCurrentX(pointer: number);
    get pointerCurrentX(): number;
    set pointerCurrentY(pointer: number);
    get pointerCurrentY(): number;
    set pointerFirstY(pointer: number);
    get pointerFirstY(): number;
    set pointerLastY(pointer: number);
    get pointerLastY(): number;
    set lastDraggedLayoutIndex(index: number);
    get lastDraggedLayoutIndex(): number;
    set trackingPointsX(points: any[]);
    get trackingPointsX(): any[];
    set trackingPointsY(points: any[]);
    get trackingPointsY(): any[];
    set items(items: ICh5ListItemInfo[]);
    get items(): ICh5ListItemInfo[];
    set selectedIteration(iterationNumber: number);
    get selectedIteration(): number;
    set wrapperTranslateX(value: number);
    get wrapperTranslateX(): number;
    set wrapperTranslateY(value: number);
    get wrapperTranslateY(): number;
    set minDecelVelocity(value: number);
    get minDecelVelocity(): number;
    set maxDecelVelocity(value: number);
    set divListWidth(value: number);
    get divListWidth(): number;
    set divListHeight(value: number);
    get divListHeight(): number;
    set lastViewIndex(index: number);
    get lastViewIndex(): number;
    set attraction(value: number);
    get attraction(): number;
    set friction(value: number);
    get friction(): number;
    set dragTicking(tick: boolean);
    get dragTicking(): boolean;
    set infiniteLoop(loop: boolean);
    get infiniteLoop(): boolean;
    set bufferedItems(bufferedItems: ICh5ListBufferedItems);
    get bufferedItems(): ICh5ListBufferedItems;
    set scrollToTimeReference(ref: number);
    get scrollToTimeReference(): number;
    set storedOffsetWidth(width: number);
    get storedOffsetWidth(): number;
    set storedOffsetHeight(height: number);
    get storedOffsetHeight(): number;
    previousViewChild(): void;
    nextViewChild(): void;
    onResizeList(): void;
    getItemDataIndexFromLayoutIndex(layoutIndex: number): number;
    computeNext(i: number): number;
    computePrevious(i: number): number;
    update(): void;
    protected handleShow(targetElement: HTMLElement): void;
    private isPagedSwipeCompatible;
    protected invokePropIncompatibility(attribute: string): void;
    private definePropIncompatibilityInfo;
    private _getCssBiggestSizeValue;
    private shouldUpdateListAndPosition;
    private resetListAndPosition;
    private _getFirstRenderedItemsNr;
    getFirstItemSizingDetails(): ClientRect | DOMRect;
    setCurrentPosition(position: number): void;
    private _startReadyObserver;
    private _getItems;
    private _internalUpdate;
    private _updateInfiniteLoop;
    private _computeItemsPerViewLayout;
    private _computeLastViewIndex;
    private initializeAttributes;
    private initializeEvents;
    private removeEvents;
}

import { Ch5OverlayPanel } from "../ch5-overlay-panel/index";
import { Ch5Button } from "../ch5-button/ch5-button";
import { ICh5ModalDialogAttributes } from "./interfaces/i-ch5-modal-dialog-attributes";
import { Ch5SignalElementAttributeRegistryEntries } from '../ch5-common/ch5-signal-attribute-registry';
import { Ch5Properties } from "../ch5-core/ch5-properties";
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
import { TCh5OverlayPanelStretch } from "../ch5-overlay-panel/interfaces";
export declare class Ch5ModalDialog extends Ch5OverlayPanel implements ICh5ModalDialogAttributes {
    static readonly COMPONENT_DATA: any;
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    static readonly ELEMENT_NAME: string;
    primaryCssClass: string;
    _ch5Properties: Ch5Properties;
    protected _elMask: HTMLElement;
    protected _elHeader: HTMLElement;
    protected _elPrompt: HTMLElement;
    protected _elPromptIcon: HTMLElement;
    protected _elPromptText: HTMLElement;
    protected _elFooter: HTMLElement;
    protected _elBtnOk: Ch5Button;
    protected _elBtnCancel: Ch5Button;
    private _okEvent;
    private _cancelEvent;
    set width(value: string);
    get width(): string;
    set height(value: string);
    get height(): string;
    set stretch(value: TCh5OverlayPanelStretch | null);
    get stretch(): (TCh5OverlayPanelStretch | null);
    set closable(value: boolean);
    get closable(): boolean;
    set title(value: string);
    get title(): string;
    set mask(value: boolean);
    get mask(): boolean;
    set maskStyle(value: string);
    get maskStyle(): string;
    set hideOkButton(value: boolean);
    get hideOkButton(): boolean;
    set okButtonLabel(value: string);
    get okButtonLabel(): string;
    set okButtonIcon(value: string);
    get okButtonIcon(): string;
    set okButtonStyle(value: string);
    get okButtonStyle(): string;
    set hideCancelButton(value: boolean);
    get hideCancelButton(): boolean;
    set cancelButtonLabel(value: string);
    get cancelButtonLabel(): string;
    set cancelButtonIcon(value: string);
    get cancelButtonIcon(): string;
    set cancelButtonStyle(value: string);
    get cancelButtonStyle(): string;
    set prompt(value: string);
    get prompt(): string;
    set promptIcon(value: string);
    get promptIcon(): string;
    set sendEventOnOk(value: string);
    get sendEventOnOk(): string;
    set sendEventOnCancel(value: string);
    get sendEventOnCancel(): string;
    private _crModalWasInstatiated;
    constructor();
    static registerSignalAttributeTypes(): void;
    static registerCustomElement(): void;
    protected attachEventListeners(): void;
    protected removeEventListeners(): void;
    protected _rebindEventCallbacks(): void;
    protected _onOkClick(inEvent: Event): void;
    protected _onCancelClick(inEvent: Event): void;
    protected _parseSizeAttr(value: string): string;
    protected _clickedOnMask(inEvent: Event): boolean;
    protected _checkAndAttachMaskIfNeeded(): void;
    protected getTargetElementForCssClassesAndStyle(): HTMLElement;
    connectedCallback(): void;
    disconnectedCallback(): void;
    private setShowBasedOnAttributes;
    static get observedAttributes(): string[];
    protected _initialize(): void;
    protected initializeButton(): void;
    protected initAttributes(): void;
    protected generateListOfAllPossibleComponentCssClasses(): string[];
    protected updateCssClasses(): void;
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    private handleMask;
    private handleMaskStyle;
    private handleWidth;
    private handleHeight;
    private handleTitle;
    private updateChangeInStretch;
    private handleOkButtonLabel;
    private handleOkButtonIcon;
    private handleOkButtonStyle;
    private handleCancelButtonLabel;
    private handleCancelButtonIcon;
    private handleCancelButtonStyle;
    private handlePrompt;
    private handlePromptIcon;
    protected createInternalHtml(): void;
    protected adjustInternalHtmlStructure(): void;
}
